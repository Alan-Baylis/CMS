<?xml version="1.0" encoding="UTF-8"?>
<shader>
  <vertex>
    #version 450

    layout(location = 0) in vec3 position;

    out vec3 pos;

    uniform mat4 mvp;

    void main(){
      gl_Position = mvp * vec4(position, 1);
      pos = position;
    }
  </vertex>
  <geometry>
    #version 450

    layout(triangles) in;
    layout(triangle_strip, max_vertices = 3) out;

    in vec3 pos[3];

    out vec3 normal;

    void main(){
      vec3 ab = normalize(pos[1] - pos[0]);
      vec3 ac = normalize(pos[2] - pos[0]);
      vec3 norm = normalize(cross(ab, ac));
      for(int i = 0; i &lt; 3; i++){
		    gl_Position = gl_in[i].gl_Position;
		    normal = norm;
		    EmitVertex();
	    }
	    EndPrimitive();
    }
  </geometry>
  <fragment>
    #version 450

    out vec4 final;
    in vec3 normal;

    void main(){
      final = vec4(vec3(0.5) + normal / 2,1);
    }
  </fragment>
</shader>
